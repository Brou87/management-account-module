/*
 * This file is generated by jOOQ.
 */
package io.surati.gap.maccount.module.domain.db.jooq.generated.tables.records;


import io.surati.gap.maccount.module.domain.db.jooq.generated.tables.MaSubBundleDocument;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MaSubBundleDocumentRecord extends UpdatableRecordImpl<MaSubBundleDocumentRecord> implements Record2<Long, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.ma_sub_bundle_document.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.ma_sub_bundle_document.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.ma_sub_bundle_document.sub_bundle_id</code>.
     */
    public void setSubBundleId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.ma_sub_bundle_document.sub_bundle_id</code>.
     */
    public Integer getSubBundleId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return MaSubBundleDocument.MA_SUB_BUNDLE_DOCUMENT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return MaSubBundleDocument.MA_SUB_BUNDLE_DOCUMENT.SUB_BUNDLE_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getSubBundleId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getSubBundleId();
    }

    @Override
    public MaSubBundleDocumentRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MaSubBundleDocumentRecord value2(Integer value) {
        setSubBundleId(value);
        return this;
    }

    @Override
    public MaSubBundleDocumentRecord values(Long value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MaSubBundleDocumentRecord
     */
    public MaSubBundleDocumentRecord() {
        super(MaSubBundleDocument.MA_SUB_BUNDLE_DOCUMENT);
    }

    /**
     * Create a detached, initialised MaSubBundleDocumentRecord
     */
    public MaSubBundleDocumentRecord(Long id, Integer subBundleId) {
        super(MaSubBundleDocument.MA_SUB_BUNDLE_DOCUMENT);

        setId(id);
        setSubBundleId(subBundleId);
    }
}
